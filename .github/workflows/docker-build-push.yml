name: Build and Push Docker Image and deploy to lab testing machine

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        version: [
          {file: ./Dockerfile, tag: ghcr.io/nthu-cp-01/final},
          {file: ./deployment/run_migration/Dockerfile, tag: ghcr.io/nthu-cp-01/final-migration},
        ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ matrix.version.tag }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ matrix.version.file }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-to-lab:
    if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
    needs: build-and-push

    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Tailscale
      uses: tailscale/github-action@v3
      with:
        oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
        oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
        tags: tag:ci

    - name: Docker Stack Deploy
      uses: cssnr/stack-deploy-action@v1
      with:
        name: nthu-cp-01-staging
        file: compose.yaml
        host: 100.85.222.36
        user: jsl
        ssh_key: ${{ secrets.DEPLOY_SSH_PRIVATE_KEY }}
